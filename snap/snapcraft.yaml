name: mobsf
base: core22
adopt-info: mobsf
summary: Mobile Security Framework (MobSF)
description: |
  Mobile Security Framework (MobSF) is an automated, all-in-one mobile application (Android/iOS/Windows) pen-testing, malware analysis and security assessment framework capable of performing static and dynamic analysis. MobSF supports mobile app binaries (APK, XAPK, IPA & APPX) along with zipped source code and provides REST APIs for seamless integration with your CI/CD or DevSecOps pipeline.The Dynamic Analyzer helps you to perform runtime security assessment and interactive instrumented testing.

  Usage:- https://github.com/JitPatro/Mobile-Security-Framework-MobSF-Snap

  Official Docs:- https://mobsf.github.io/docs


grade: stable
confinement: strict


architectures:
  - build-on: amd64


environment:
  JAVA_HOME: "$SNAP/usr/lib/jvm/java-11-openjdk-${SNAP_ARCH}"
  JAVA_FONTS: "$SNAP/usr/share/fonts/truetype"
  QT_QPA_PLATFORM_PLUGIN_PATH: "$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/"
  PATH: "$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$SNAP/.venv/bin:$PATH:$JAVA_HOME/bin"
  POETRY_VIRTUALENVS_PATH: $SNAP/.venv
  POETRY_VIRTUALENVS_CREATE: false
  DJANGO_SUPERUSER_USERNAME: mobsf
  DJANGO_SUPERUSER_PASSWORD: mobsf
  
  LC_ALL: C.UTF-8
  LANG: C.UTF-8


apps:
  mobsf:
    command: .venv/bin/run
    plugs: [desktop, home, network, network-bind]


parts:
  snapcraft-preload:
    source: https://github.com/sergiusens/snapcraft-preload.git
    plugin: cmake
    build-packages:
      - on amd64:
        - gcc-multilib
        - g++-multilib
        
  mobsf:
    after: [snapcraft-preload]
    plugin: python
    source: https://github.com/MobSF/Mobile-Security-Framework-MobSF.git

    build-packages:
      - build-essential
      - openjdk-11-jdk
      - python3-dev
      - python3-pip
      - python3-venv
      - libffi-dev
      - libssl-dev
      - libxml2-dev
      - libxslt1-dev
      - libjpeg-dev
      - zlib1g-dev
      - wkhtmltopdf

    stage-packages:
      - adb
      - openjdk-11-jre-headless
      - wkhtmltopdf

    override-build: |
      python3 -m venv $CRAFT_PART_INSTALL/.venv
      source $CRAFT_PART_INSTALL/.venv/bin/activate
      pip install --no-cache-dir --upgrade pip wheel
      pip install --no-cache-dir poetry==1.6.1
      pip install --no-cache-dir poetry==1.6.1 --root $CRAFT_PART_INSTALL
      poetry config --local virtualenvs.create false 
      poetry install --no-root --only main --no-interaction --no-ansi
      chmod 644 ./poetry.toml
      export DJANGO_SUPERUSER_USERNAME=mobsf
      export DJANGO_SUPERUSER_PASSWORD=mobsf
      poetry run python3 manage.py makemigrations
      poetry run python3 manage.py makemigrations StaticAnalyzer
      poetry run python3 manage.py migrate
      poetry run python manage.py createsuperuser --noinput --email ""
      poetry run python manage.py create_roles
      find $CRAFT_PART_INSTALL/ -name "*.pyc" -exec rm -rf {} +
      find $CRAFT_PART_INSTALL/ | grep -E "(__pycache__|\.pyo$)" | xargs rm -rf
      rm -rf $CRAFT_PART_INSTALL/.venv/lib/python3.10/site-packages/{pip*,setuptools*,wheel*}
      sed -i 's|!/.*\?/mobsf/install/.venv/bin/python|!/usr/bin/env python|g' $CRAFT_PART_INSTALL/.venv/bin/*
      sed -i "s|('MOBSF_ADB_BINARY', '')|('MOBSF_ADB_BINARY', '/snap/mobsf/current/usr/bin/adb')|g" ./mobsf/MobSF/settings.py
      sed -i 's|%s from master branch.|%s with "snap refresh mobsf"|g' ./mobsf/MobSF/utils.py
      mv ./run.sh ./poetry.toml ./pyproject.toml ./manage.py ./mobsf ./LICENSE ./LICENSES $CRAFT_PART_INSTALL
      echo -e '#!/usr/bin/env bash\n\n' > $CRAFT_PART_INSTALL/.venv/bin/run
      echo 'cd $SNAP && usr/bin/snapcraft-preload ./run.sh "$@"' >> $CRAFT_PART_INSTALL/.venv/bin/run
      chmod +x $CRAFT_PART_INSTALL/.venv/bin/run
      cp -r $CRAFT_PART_INSTALL/.venv $CRAFT_PRIME/
      cd $CRAFT_PART_INSTALL/.venv/bin; for file in {python,python3,python3.10}; do ln -sf /usr/bin/python3.10 $file; done
      cd -;craftctl set version=$(git describe --tags)

    override-stage: |
      craftctl default
      cd $CRAFT_STAGE/usr/lib/jvm/java-11-openjdk-amd64/lib/security/
      ln -sf ../../../../../../etc/java-11-openjdk/security/blacklisted.certs ./blacklisted.certs

    override-prime: |
      snapcraftctl prime
      mv usr/local/bin/snapcraft-preload usr/bin/
      mv usr/local/lib/lib* lib/
      rm -rf usr/local
      
    organize:
      usr/lib/*-linux-gnu/android/*: usr/lib/
      usr/lib/*-linux-gnu/dri/*: usr/lib/
      usr/lib/*-linux-gnu/gstreamer-1.0/*: usr/lib/
      usr/lib/*-linux-gnu/nss/*: usr/lib/
